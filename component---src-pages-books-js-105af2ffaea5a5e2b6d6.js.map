{"version":3,"sources":["webpack:///./src/components/book/book.module.css","webpack:///./src/helper/index.js","webpack:///./src/components/lazyImage/index.js","webpack:///./src/components/book/index.js","webpack:///./src/pages/books.js"],"names":["module","exports","cacheImages","url","weserv","replace","LazyImage","src","alt","useState","imageRef","setImageRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","isIntersecting","unobserve","threshold","rootMargin","observe","ref","className","data-src","onLoad","event","target","classList","add","remove","onError","Book","book","title","author","image","styles","bookCover","bookCoverMask","bookCoverImage","bookInfo","bookInfoTitle","href","rel","bookInfoLink","bookInfoAuthor","BooksPage","data","allBookJson","group","collect","dos","wish","tab","setTab","allBooks","status","books","nodes","name","Layout","description","style","textAlign","map","index","onClick","key","length","id","pageQuery"],"mappings":"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","file":"component---src-pages-books-js-105af2ffaea5a5e2b6d6.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"book-module--book--D1hGn\",\"bookCover\":\"book-module--book-cover--3hUG0\",\"bookCoverMask\":\"book-module--book-cover-mask--3eE4O\",\"bookCoverImage\":\"book-module--book-cover-image--6oLa3\",\"bookInfo\":\"book-module--book-info--2-OY2\",\"bookInfoTitle\":\"book-module--book-info-title--1e-mA\",\"bookInfoLink\":\"book-module--book-info-link--2qlxl\",\"bookInfoAuthor\":\"book-module--book-info-author--2EyRU\"};","export function cacheImages(url) {\n  const weserv = 'https://images.weserv.nl';\n  if (url) {\n    return `${weserv}?url=${url.replace('https://', '')}`;\n  }\n}\n/* \nexport function enableTheme(newTheme) {\n  const root = document.documentElement;\n  const oldTheme = newTheme === 'light' ? 'dark' : 'light';\n\n  root.classList.add(newTheme);\n  root.classList.remove(oldTheme);\n\n  localStorage.setItem('prefers-theme', newTheme);\n}\n\nexport function localTheme() {\n  return localStorage.getItem('prefers-theme');\n}\n\nexport function systemTheme() {\n  let perf = window.matchMedia('prefers-color-schema: dark');\n  if (perf.matches) {\n    return 'dark';\n  } else {\n    perf = window.matchMedia('prefers-color-schema: light');\n    if (perf.matches) {\n      return 'light';\n    }\n  }\n  return null;\n}\n\nexport const initTheme = localTheme() || systemTheme();\n */\n","import React, { useState, useEffect } from 'react';\n\nconst LazyImage = ({ src, alt }) => {\n  const [imageRef, setImageRef] = useState();\n\n  const onLoad = event => {\n    event.target.classList.add('loaded');\n    event.target.classList.remove('lazy');\n  };\n\n  const onError = event => {\n    event.target.classList.remove('lazy');\n    event.target.classList.add('has-error');\n  };\n\n  useEffect(() => {\n    let observer;\n\n    if (imageRef) {\n      if (IntersectionObserver) {\n        observer = new IntersectionObserver(\n          entries => {\n            entries.forEach(entry => {\n              if (entry.intersectionRatio > 0 || entry.isIntersecting) {\n                imageRef.src = src;\n                observer.unobserve(imageRef);\n              }\n            });\n          },\n          {\n            threshold: 0.01,\n            rootMargin: '75%',\n          }\n        );\n        observer.observe(imageRef);\n      }\n    }\n\n    return () => {\n      if (observer && observer.unobserve) {\n        observer.unobserve(imageRef);\n      }\n    };\n  }, [src, imageRef]);\n\n  return (\n    <img\n      ref={setImageRef}\n      alt={alt}\n      className=\"lazy\"\n      data-src={src}\n      onLoad={onLoad}\n      onError={onError}\n    />\n  );\n};\n\nexport default LazyImage;\n","import React from 'react';\nimport { cacheImages } from '../../helper';\nimport styles from './book.module.css';\nimport LazyImage from '../lazyImage';\n\nexport default function Book({ book }) {\n  const { title, author, image, url } = book;\n\n  return (\n    <div className={styles.book}>\n      <div className={styles.bookCover}>\n        <div className={styles.bookCoverMask}/>\n        <div className={styles.bookCoverImage}>\n          <LazyImage src={cacheImages(image)} alt={title} />\n        </div>\n        <div className={styles.bookInfo}>\n          <p className={styles.bookInfoTitle}>\n            <a\n              href={url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className={styles.bookInfoLink}\n            >\n              {title}\n            </a>\n          </p>\n          <p className={styles.bookInfoAuthor}>——{author}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { graphql } from 'gatsby';\nimport React, { useState } from 'react';\nimport Layout from '../components/layout/Layout';\nimport SEO from '../components/seo';\nimport Book from '../components/book';\n\nexport default function BooksPage({ data }) {\n  const [collect, dos, wish] = data.allBookJson.group;\n\n  const [tab, setTab] = useState('collect');\n\n  const allBooks = [\n    {\n      status: 'collect',\n      books: collect.nodes,\n      name: '读过',\n    },\n    {\n      status: 'do',\n      books: dos.nodes,\n      name: '在读',\n    },\n    {\n      status: 'wish',\n      books: wish.nodes,\n      name: '想读',\n    },\n  ];\n\n  return (\n    <Layout>\n      <SEO title=\"书单\" description=\"书单\" />\n      <div className=\"books\">\n        <div style={{ textAlign: 'left' }}>\n          <div className=\"books-btn-group\">\n            {allBooks.map(({ books, status, name }, index) => (\n              <button\n                onClick={() => setTab(status)}\n                key={index}\n                className={`btn ${tab === status ? 'btn__active' : ''}`}\n              >\n                {name}\n                &nbsp;&bull;&nbsp;\n                {books.length}\n              </button>\n            ))}\n          </div>\n        </div>\n        <div>\n          {allBooks.map(({ books, status }, index) => (\n            <div className={`books-wrapper books-${status} ${tab === status ? 'active' : ''}`} key={index}>\n              {books.map(book => (\n                <div className=\"book-container\" key={book.id}>\n                  <Book key={book.id} book={book} />\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BooksQuery {\n    allBookJson {\n      group(field: status) {\n        nodes {\n          author\n          date(formatString: \"YYYY-MM-DD\")\n          image\n          id\n          status\n          tags\n          title\n          url\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}