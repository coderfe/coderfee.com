{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/use-github-actions-to-deploy-react-app","result":{"data":{"markdownRemark":{"html":"<p>最近接到一个需求，做一个类似下面这种页面的 demo，原本让用小程序实现，但是后来发现貌似没法用小程序实现，就改用 Web 来实现了。后来给别人展示的时候，发现我总不能发给人家一堆 node_modules 呀，于是就想部署到 GitHub Pages。其实不用 GitHub Actions 也可以，只不过每次 push 之后多敲一次命令：<code class=\"language-text\">npm run deploy</code>，但是偷懒也应该要认真偷。</p>\n<h2>手动部署</h2>\n<p>由于这个项目是用 create-react-app 生成的，所以参考一下它的<a href=\"\">部署文档</a>，可以看到其实挺简单的：</p>\n<ol>\n<li>\n<p>在 <code class=\"language-text\">package.json</code> 中添加 <code class=\"language-text\">homepage</code> 字段，其中 <code class=\"language-text\">&lt;my-app&gt;</code> 可以是项目名称</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"homepage\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://myusername.github.io/&lt;my-app>\"</span></code></pre></div>\n</li>\n<li>\n<p>安装 <code class=\"language-text\">gh-pages</code> 依赖，并在 <code class=\"language-text\">package.json</code> 添加 <code class=\"language-text\">deploy</code> 脚本，其中 <code class=\"language-text\">predeploy</code> 会在 <code class=\"language-text\">deploy</code> 脚本运行之前自动执行</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> i -D gh-pages</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"predeploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gh-pages -d build\"</span></code></pre></div>\n</li>\n<li>\n<p>运行 <code class=\"language-text\">deploy</code> 脚本</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> run deploy</code></pre></div>\n</li>\n</ol>\n<p>有可能遇到 gh-pages 分支无法创建的问题，运行下面的命令，清一下缓存就 OK 了：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">rm</span> -rf node_modules/gh-pages/.cache</code></pre></div>\n<h2>GitHub Actions 部署</h2>\n<p>GitHub Actions 做的是同样的事情，只不过把 <code class=\"language-text\">npm run deploy</code> 这一步交给了 CI 来做。</p>\n<ol>\n<li>\n<p>创建一个 workflow 文件</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">touch</span> .github/.main.yaml</code></pre></div>\n</li>\n<li>\n<p>修改内容</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CI\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> master <span class=\"token punctuation\">]</span>\n <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> master <span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n     <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> matrix.node<span class=\"token punctuation\">-</span>version <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n       <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n       <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> matrix.node<span class=\"token punctuation\">-</span>version <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">-</span>  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n       <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n         git config user.name &lt;username>\n         git config user.email &lt;email>\n         git remote set-url origin https://${{ secrets.&lt;personal_access_token> }}@github.com/&lt;user>/&lt;repo>.git\n         npm install\n         npm run deploy</span></code></pre></div>\n</li>\n<li>最后将 <code class=\"language-text\">&lt;&gt;</code> 内的内容替换自己的配置即可，其中 <code class=\"language-text\">&lt;personal_access_token&gt;</code> 需要在生成以后添加到项目里的 <code class=\"language-text\">secrets</code> 里</li>\n</ol>\n<p>到这里就完成了，只要触发 <code class=\"language-text\">push</code> 操作，GitHub Actions 就会自动运行部署。</p>","tableOfContents":"<ul>\n<li><a href=\"/2020/use-github-actions-to-deploy-react-app/#%E6%89%8B%E5%8A%A8%E9%83%A8%E7%BD%B2\">手动部署</a></li>\n<li><a href=\"/2020/use-github-actions-to-deploy-react-app/#github-actions-%E9%83%A8%E7%BD%B2\">GitHub Actions 部署</a></li>\n</ul>","frontmatter":{"path":"/2020/use-github-actions-to-deploy-react-app","date":"May 05, 2020","title":"使用 GitHub Actions 将 React App 部署到 GitHub Pages","tldr":"简单记录一下使用 GitHub Action 的过程","tags":["GitHub Actions","工具","React","GitHub Pages"]},"timeToRead":2}},"pageContext":{"next":{"frontmatter":{"title":"macOS 折腾记","path":"/macos/setup"}},"previous":null,"relatedPosts":[{"next":{"frontmatter":{"title":"一个人和他自己的故事","path":"/2019/break-2019-goto-2020"}},"previous":{"frontmatter":{"title":"使用 GitHub Actions 将 React App 部署到 GitHub Pages","path":"/2020/use-github-actions-to-deploy-react-app"}},"node":{"frontmatter":{"path":"/macos/setup","tags":["工具"],"title":"macOS 折腾记"}}},{"next":{"frontmatter":{"title":"前端性能优化","path":"/front-end-performance-optimization-tips"}},"previous":{"frontmatter":{"title":"Stylish —— 优雅地刷网页","path":"/restyle-with-stylish"}},"node":{"frontmatter":{"path":"/my-favorite-apps","tags":["工具"],"title":"一些我自己常用的优质Apps"}}}]}}}