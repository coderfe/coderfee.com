{"componentChunkName":"component---src-templates-blog-post-js","path":"/ajax","result":{"data":{"markdownRemark":{"html":"<h2>Step1—创建实例化对象</h2>\n<p>由于各浏览器间的差异，创建实例的方法也不同，下面的代码创建了一个跨浏览器的类实例。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> xhr<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>XMLHttpRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// sarifi/firefox/chrome/IE7+</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActiveXObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Microsoft.HTTPXML'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// IE5/6</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果不考虑 IE5/6，其实只需下面的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Step2—发送请求</h2>\n<ul>\n<li>\n<p><code class=\"language-text\">open()方法</code></p>\n<table><thead><tr><th>参数</th><th>说明</th><th>取值</th></tr></thead><tbody><tr><td>method</td><td>请求类型，参数大写</td><td><code>POST</code>, <code>GET</code></td></tr><tr><td>URL</td><td>请求的URL地址</td><td><code>url</code></td></tr><tr><td>async</td><td>请求是否为异步模式，默认为<code>true</code></td><td><code>true</code>, <code>false</code></td></tr></tbody></table>\n</li>\n<li>\n<p><code class=\"language-text\">send()方法</code></p>\n<table><thead><tr><th>请求类型</th><th>参数</th></tr></thead><tbody><tr><td><code>POST</code></td><td><code>string</code></td></tr><tr><td><code>GET</code></td><td><code>null</code></td></tr></tbody></table>\n</li>\n</ul>\n<h2>Step3—取得响应</h2>\n<p>检查请求状态，监听<code class=\"language-text\">readyState</code>和<code class=\"language-text\">status</code>的变化</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">xhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>readystate <span class=\"token operator\">===</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Success do something</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Failed</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">readyState</code>取值如下</p>\n<table><thead><tr><th align=\"left\">readyState</th><th align=\"left\">说明</th></tr></thead><tbody><tr><td align=\"left\">0</td><td align=\"left\">请求未初始化，open方法未调用</td></tr><tr><td align=\"left\">1</td><td align=\"left\">服务器连接已建立，open方法已调用</td></tr><tr><td align=\"left\">2</td><td align=\"left\">请求已接受，收到头信息</td></tr><tr><td align=\"left\">3</td><td align=\"left\">请求处理中，收到响应体</td></tr><tr><td align=\"left\">4</td><td align=\"left\">请求已完成，响应完成</td></tr></tbody></table>\n<p><code class=\"language-text\">status</code>取值如下</p>\n<table><thead><tr><th>status</th><th>说明</th></tr></thead><tbody><tr><td>1XX</td><td>信息类，收到请求，表示正在处理</td></tr><tr><td>2XX</td><td>成功，表示用户请求被正确接收处理</td></tr><tr><td>3XX</td><td>重定向，表示请求没有成功</td></tr><tr><td>4XX</td><td>客户端错误</td></tr><tr><td>5XX</td><td>服务器错误</td></tr></tbody></table>\n<p><a href=\"https://help.aliyun.com/knowledge_detail/6555009.html?spm=0.0.0.0.hIQaqR\">http 状态码详解</a></p>\n<h2>Step4—jQuery 实现 Ajax</h2>\n<p>jQuery 中提供了一个实现 Ajax 的方法即<code class=\"language-text\">jQuery.ajax([settings])</code>，参数如下：</p>\n<table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>请求类型<code>POST</code> <code>GET</code></td></tr><tr><td>url</td><td>发送请求地址</td></tr><tr><td>data</td><td>一个对象，发送到服务器的数据</td></tr><tr><td>dataType</td><td>预期服务器返回的数据类型，一般采用<code>json</code></td></tr><tr><td>success</td><td>请求成功后的回调函数</td></tr><tr><td>error</td><td>请求失败后的回调函数</td></tr></tbody></table>\n<p>示例：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">$<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n  url<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>url<span class=\"token operator\">></span>\n  data<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>data<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  dataType<span class=\"token operator\">:</span> <span class=\"token string\">\"josn\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do something</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// do something</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/ajax/#step1%E5%88%9B%E5%BB%BA%E5%AE%9E%E4%BE%8B%E5%8C%96%E5%AF%B9%E8%B1%A1\">Step1—创建实例化对象</a></li>\n<li><a href=\"/ajax/#step2%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82\">Step2—发送请求</a></li>\n<li><a href=\"/ajax/#step3%E5%8F%96%E5%BE%97%E5%93%8D%E5%BA%94\">Step3—取得响应</a></li>\n<li><a href=\"/ajax/#step4jquery-%E5%AE%9E%E7%8E%B0-ajax\">Step4—jQuery 实现 Ajax</a></li>\n</ul>","frontmatter":{"path":"/ajax","date":"Apr 08, 2016","title":"Ajax学习笔记","tldr":"Ajax 即 Asynchronous Javascript and XML（异步的 Javascript 与 XML 技术），简单来说就是无需刷新整个页面就能更新用户界面，从而更快地响应用户行为的一套技术。","tags":["JavaScript"]},"timeToRead":2}},"pageContext":{"next":{"frontmatter":{"title":"搭建个人博客 Hexo & Github Pages","path":"/build-your-blog-with-hexo-github-pages"}},"previous":{"frontmatter":{"title":"前端性能优化","path":"/front-end-performance-optimization-tips"}},"relatedPosts":[{"next":{"frontmatter":{"title":"『TypeScript』实用类型","path":"/typescript-in-action/utility-types"}},"previous":{"frontmatter":{"title":"『书』擦去眼泪，如同掸去身上的稻草","path":"/read-think/huozhe-xusanguan"}},"node":{"frontmatter":{"path":"/typescript-in-action/check-types-javascript","tags":["TypeScript","JavaScript"],"title":"『TypeScript』如何对 JS 进行类型检查"}}},{"next":{"frontmatter":{"title":"五一游记","path":"/travel-notes"}},"previous":{"frontmatter":{"title":"远方有多远？请你告诉我——Hello World","path":"/the-past-three-years"}},"node":{"frontmatter":{"path":"/es2019","tags":["JavaScript"],"title":"『译』ES2019 简明指南"}}},{"next":{"frontmatter":{"title":"『书』按下 F5，刷新自己","path":"/2019-01-16-read"}},"previous":{"frontmatter":{"title":"『书』打发地铁通勤时间的书（书摘）","path":"/2019-03"}},"node":{"frontmatter":{"path":"/es2018-new-features","tags":["JavaScript","译文"],"title":"『译』每个 JavaSript 开发者都需要知道的 ES2018 新功能"}}},{"next":{"frontmatter":{"title":"2018 后会无期","path":"/2018"}},"previous":{"frontmatter":{"title":"『书』按下 F5，刷新自己","path":"/2019-01-16-read"}},"node":{"frontmatter":{"path":"/7-ways-of-javascript-function","tags":["JavaScript","译文"],"title":"『译』创建 JavaScript 函数的 7 种方式"}}},{"next":{"frontmatter":{"title":"Vue.js 开发不完全指南","path":"/vuejs-develop-guide"}},"previous":{"frontmatter":{"title":"2018 后会无期","path":"/2018"}},"node":{"frontmatter":{"path":"/handling-errors-in-javascript","tags":["JavaScript","译文"],"title":"『译』JavaScript 错误处理权威指南"}}},{"next":{"frontmatter":{"title":"『译』「Chrome Devtools」网络问题指南","path":"/network-issues-guide"}},"previous":{"frontmatter":{"title":"Vue.js 开发不完全指南","path":"/vuejs-develop-guide"}},"node":{"frontmatter":{"path":"/4-uses-of-array-map","tags":["JavaScript","译文"],"title":"『译』你应该要知道的 Array.map() 的 4 种用法"}}},{"next":{"frontmatter":{"title":"8 月随笔","path":"/feelings-in-august"}},"previous":{"frontmatter":{"title":"『译』「Chrome Devtools」网络问题指南","path":"/network-issues-guide"}},"node":{"frontmatter":{"path":"/write-better-javascript","tags":["JavaScript","译文"],"title":"『译』5 个小技巧，让你在 JavaScript 中写出更好的条件语句"}}}]}}}