{"componentChunkName":"component---src-templates-blog-post-js","path":"/automatic-deploy-hexo-blog-with-travis-ci","result":{"data":{"markdownRemark":{"html":"<p>前几天的<a href=\"http://coderfe.cn/2016/04/07/hexo-github-blog/\">一篇文章</a>介绍了搭建自己的 Hexo 博客，可是，今天遇到了一个问题：我要在另一台电脑上写博客文章，但是博客的源代码却不在身边，而且我也没有备份。于是就有一下几个解决方案：</p>\n<ul>\n<li>拷贝到 U 盘随身携带。但是，相信我，总有一天你会忘记的</li>\n<li>备份在云端，比如 DropBox 或者其他云盘。缺点：太麻烦，每次更新都要手动上传</li>\n<li>放在 Github 上。恩，这似乎是个不错的办法。但是这个方法每次既要更新博客，还要 push 到 Github 上</li>\n</ul>\n<h2>Travis CI 解决方案</h2>\n<h3>约定</h3>\n<ul>\n<li>这些步骤都是 Linux 中完成的，其他平台的步骤大同小异</li>\n<li>以我的博客为例，blog 是源码项目(目录)，coderfe.github.io 是部署后的博客项目</li>\n</ul>\n<h3>准备工作</h3>\n<ul>\n<li>\n<p>安装 Travis Ci 命令行工具</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ gem <span class=\"token function\">install</span> travis</code></pre></div>\n</li>\n<li>\n<p>生成 SSH key,并且把 id_rsa.pub 添加为 coderfe.github.io 项目的 Deploy key，注意要勾选<code class=\"language-text\">Allow write access</code>,因为 Travis CI 要对这个仓库拥有写入权限</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ ssh-keygen -t rsa -C <span class=\"token string\">\"your_email@example.com\"</span>\n<span class=\"token comment\"># 生成的ssh key一般在`~/home/.ssh`目录下</span></code></pre></div>\n</li>\n<li>\n<p>在本地的 blog 项目中新建<code class=\"language-text\">.travis</code>文件夹，最后它的结构如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">.travis\n<span class=\"token operator\">|</span>__id_rsa.enc\n<span class=\"token operator\">|</span>__ssh_config</code></pre></div>\n</li>\n</ul>\n<h3>正式开始</h3>\n<ul>\n<li>把整个 Hexo 项目 push 到 Github 上，这个就是博客的源代码</li>\n<li>前往<a href=\"https://travis-ci.org/\">Travis CI 官网</a>用 GitHub 账号的登陆，并把自己的项目同步到 Travis CI，然后把<code class=\"language-text\">coderfe/blog</code>的开关打开</li>\n<li>\n<p>安装 Travis CI 命令行并用 GitHub 账号登录</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 安装</span>\n$ gem <span class=\"token function\">install</span> travis\n<span class=\"token comment\"># 登录</span>\n$ travis login --auto</code></pre></div>\n</li>\n<li>\n<p>加密<code class=\"language-text\">id_rsa</code>私钥（不能暴露在公开仓库中）</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 把id_rsa复制到当前目录.travis/</span>\n$ <span class=\"token function\">cp</span> ~/.ssh/.id_rsa <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># 加密之前必须新建.travis.yml文件，否则会报错</span>\n$ <span class=\"token function\">touch</span> .travis.yml\n<span class=\"token comment\"># 加密</span>\n$ travis encrypt-file ssh_key --add\n<span class=\"token comment\"># 删除id_rsa</span>\n$ <span class=\"token function\">rm</span> id_rsa</code></pre></div>\n<p>以上代码执行完成功后在<code class=\"language-text\">.travis.yml</code>文件中有一串字母和数字，这是用来解密的，每个人都不一样，先不要动，而且会生成了<code class=\"language-text\">id_rsa.enc</code>文件，把<code class=\"language-text\">.travis.yml</code>移动到<code class=\"language-text\">blog</code>根目录</p>\n</li>\n<li>\n<p>再在<code class=\"language-text\">.travis</code>下新建<code class=\"language-text\">ssh_config</code>文件，内容如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host github.com\nUser git\nStrictHostKeyChecking no\nIdentityFile ~/.ssh/id_rsa\nIdentitiesOnly yes</code></pre></div>\n</li>\n<li>\n<p>配置<code class=\"language-text\">.travis.yml</code>文件，我的配置如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n<span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> master\n\n<span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n\n<span class=\"token key atrule\">sudo</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token string\">'stable'</span>\n\n<span class=\"token key atrule\">before_install</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> openssl aes<span class=\"token punctuation\">-</span>256<span class=\"token punctuation\">-</span>cbc <span class=\"token punctuation\">-</span>K $encrypted_d2cb722f4635_key <span class=\"token punctuation\">-</span>iv $encrypted_d2cb722f4635_iv\n  <span class=\"token punctuation\">-</span>in .travis/id_rsa.enc <span class=\"token punctuation\">-</span>out ~/.ssh/id_rsa <span class=\"token punctuation\">-</span>d\n<span class=\"token punctuation\">-</span> chmod 600 ~/.ssh/id_rsa\n<span class=\"token punctuation\">-</span> eval $(ssh<span class=\"token punctuation\">-</span>agent)\n<span class=\"token punctuation\">-</span> ssh<span class=\"token punctuation\">-</span>add ~/.ssh/id_rsa\n<span class=\"token punctuation\">-</span> cp .travis/ssh_config ~/.ssh/config\n<span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name \"coderfe\"\n<span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email coderfee@outlook.com\n<span class=\"token punctuation\">-</span> git clone <span class=\"token punctuation\">-</span>b master git@github.com<span class=\"token punctuation\">:</span>coderfe/coderfe.github.io.git .deploy_git\n\n<span class=\"token key atrule\">install</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> npm install hexo<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g\n<span class=\"token punctuation\">-</span> npm install\n\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> hexo clean\n<span class=\"token punctuation\">-</span> hexo g\n<span class=\"token punctuation\">-</span> hexo d</code></pre></div>\n</li>\n</ul>\n<h3>需要注意的问题</h3>\n<ul>\n<li><code class=\"language-text\">Deploy key</code>权限问题，记得勾选<code class=\"language-text\">Allow write access</code></li>\n<li>加密私钥<code class=\"language-text\">id_rsa</code>，私钥不能暴露在公开仓库，否则其他人也会拥有你仓库的读写权限</li>\n</ul>\n<h2>结语</h2>\n<p>利用 Travis CI 持续集成服务，再也不必去手动备份了，只需要一次 push 就可实现博客的更新和备份，大大提高了效率啊，有木有！这种自动化的工具真的是多多益善。当然像 Nodejs 这样的项目都在用这项服务，说明自动部署 Hexo Blog 只是其功能中很小的一部分，继续学习！</p>\n<h3>参考资料</h3>\n<p><a href=\"https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/\">用 Travis CI 自動部署網站到 GitHub</a>\n<a href=\"https://docs.travis-ci.com/\">Travis CI 官方文档</a></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/automatic-deploy-hexo-blog-with-travis-ci/#travis-ci-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\">Travis CI 解决方案</a></p>\n<ul>\n<li><a href=\"/automatic-deploy-hexo-blog-with-travis-ci/#%E7%BA%A6%E5%AE%9A\">约定</a></li>\n<li><a href=\"/automatic-deploy-hexo-blog-with-travis-ci/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">准备工作</a></li>\n<li><a href=\"/automatic-deploy-hexo-blog-with-travis-ci/#%E6%AD%A3%E5%BC%8F%E5%BC%80%E5%A7%8B\">正式开始</a></li>\n<li><a href=\"/automatic-deploy-hexo-blog-with-travis-ci/#%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98\">需要注意的问题</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/automatic-deploy-hexo-blog-with-travis-ci/#%E7%BB%93%E8%AF%AD\">结语</a></p>\n<ul>\n<li><a href=\"/automatic-deploy-hexo-blog-with-travis-ci/#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\">参考资料</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"path":"/automatic-deploy-hexo-blog-with-travis-ci","date":"Apr 25, 2016","title":"利用 TravisCI 自动部署 Hexo blog","tldr":"Travis CI 是在软件开发领域中的一个在线的，分布式的持续集成服务，用来构建及测试在 GitHub 托管的代码。这个软件的代码同时也是开源的，可以在 GitHub 上下载到，尽管开发者当前并不推荐在闭源项目中单独使用它。","tags":["Hexo"]},"timeToRead":3}},"pageContext":{"next":{"frontmatter":{"title":"Stylish —— 优雅地刷网页","path":"/restyle-with-stylish"}},"previous":{"frontmatter":{"title":"优化博客性能","path":"/optimize-blog-performance"}},"relatedPosts":[{"next":null,"previous":{"frontmatter":{"title":"Ajax学习笔记","path":"/ajax"}},"node":{"frontmatter":{"path":"/build-your-blog-with-hexo-github-pages","tags":["Hexo"],"title":"搭建个人博客 Hexo & Github Pages"}}}]}}}