{"componentChunkName":"component---src-templates-blog-post-js","path":"/front-end-performance-optimization-tips","result":{"data":{"markdownRemark":{"html":"<h4>减少 HTTP 请求（打开网页的时候，我们看到的文字，图片，多媒体每个内容都是从服务器获取的，每一个内容的获取，就是一个 HTTP 请求）</h4>\n<ul>\n<li>图片<code class=\"language-text\">css sprite</code></li>\n<li>图片地图,在一张图片上关联多个 URL,URL 最终指向取决于用户点击的位置\n<code class=\"language-text\">script</code>合并、<code class=\"language-text\">css</code>合并</li>\n<li>内联图片,通过使用<code class=\"language-text\">data:URL</code>模式可以使页面包含图片但无需额外的 HTTP 请求</li>\n</ul>\n<h4>使用<code class=\"language-text\">CDN</code>内容分发网络（<code class=\"language-text\">Content Delivery Network</code>其目的在于让用户可就近取得所需内容，解决网络拥挤的状况，提高用户的访问速度）</h4>\n<h4>压缩<code class=\"language-text\">javascript</code>和<code class=\"language-text\">css</code>(gzip)</h4>\n<ul>\n<li>去除空格、空白符、注释符</li>\n<li>简写方法名、参数名,精简<code class=\"language-text\">javascript</code>脚本</li>\n<li><code class=\"language-text\">css</code>重用类,删除空的声明</li>\n</ul>\n<h4><code class=\"language-text\">css</code>放在顶部<code class=\"language-text\">head</code>中(css at the top)</h4>\n<ul>\n<li>避免页面出现空白或闪烁</li>\n</ul>\n<h4><code class=\"language-text\">script</code>放在页面底部(script at the bottom)</h4>\n<ul>\n<li>先呈现出内容，避免浏览器因脚本出错而停止加载内容</li>\n</ul>\n<h4>避免在<code class=\"language-text\">css</code>中使用表达式，影响浏览器的性能</h4>\n<h4>将<code class=\"language-text\">javascript</code>和<code class=\"language-text\">css</code>放在外部文件</h4>\n<ul>\n<li>\n<p>单独提取</p>\n<ul>\n<li>提高复用性</li>\n<li>减小页面体积</li>\n<li>提高<code class=\"language-text\">js</code>和<code class=\"language-text\">css</code>的可维护性</li>\n<li>可单独缓存</li>\n</ul>\n</li>\n<li>\n<p>写在页面内（样式只应用于一个页面，不被经常访问，脚本和样式很少&#x3C;20）</p>\n<ul>\n<li>减少页面请求</li>\n<li>提升页面渲染速度</li>\n</ul>\n</li>\n</ul>\n<h4>减少 DNS 查询（DNS 查找可以缓存起来以提升性能）</h4>\n<ul>\n<li>IE 30m</li>\n<li>Chrome 60s</li>\n<li>Firefox 60s</li>\n<li>缓存时间长：减少 DNS 重复查找，节省时间</li>\n<li>缓存时间短：及时检测网站服务器的变化，保证访问的正确性</li>\n</ul>\n<h4>避免重定向（用户的请求被重新转向其他请求）</h4>\n<ul>\n<li>301：用户请求的页面被移动到其他位置，永久重定向，对搜索引擎更智能</li>\n<li>302：用户请求的的页面被找到了，但不在原始地址，临时重定向</li>\n<li>增加了服务器的往返次数</li>\n</ul>\n<h4>移除重复脚本</h4>\n<ul>\n<li>重复脚本会增加不必要的 HTTP 请求和执行 javascript 所浪费的时间</li>\n</ul>\n<h4>配置实体标签（<code class=\"language-text\">Enity Tag</code>,Web 服务器和浏览器用于确认缓存组件有效的一种机制)</h4>","tableOfContents":"<ul>\n<li><a href=\"/front-end-performance-optimization-tips/#%E5%87%8F%E5%B0%91-http-%E8%AF%B7%E6%B1%82%EF%BC%88%E6%89%93%E5%BC%80%E7%BD%91%E9%A1%B5%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9C%8B%E5%88%B0%E7%9A%84%E6%96%87%E5%AD%97%EF%BC%8C%E5%9B%BE%E7%89%87%EF%BC%8C%E5%A4%9A%E5%AA%92%E4%BD%93%E6%AF%8F%E4%B8%AA%E5%86%85%E5%AE%B9%E9%83%BD%E6%98%AF%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%8E%B7%E5%8F%96%E7%9A%84%EF%BC%8C%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%86%85%E5%AE%B9%E7%9A%84%E8%8E%B7%E5%8F%96%EF%BC%8C%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA-http-%E8%AF%B7%E6%B1%82%EF%BC%89\">减少 HTTP 请求（打开网页的时候，我们看到的文字，图片，多媒体每个内容都是从服务器获取的，每一个内容的获取，就是一个 HTTP 请求）</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E4%BD%BF%E7%94%A8code-classlanguage-textcdncode%E5%86%85%E5%AE%B9%E5%88%86%E5%8F%91%E7%BD%91%E7%BB%9C%EF%BC%88code-classlanguage-textcontent-delivery-networkcode%E5%85%B6%E7%9B%AE%E7%9A%84%E5%9C%A8%E4%BA%8E%E8%AE%A9%E7%94%A8%E6%88%B7%E5%8F%AF%E5%B0%B1%E8%BF%91%E5%8F%96%E5%BE%97%E6%89%80%E9%9C%80%E5%86%85%E5%AE%B9%EF%BC%8C%E8%A7%A3%E5%86%B3%E7%BD%91%E7%BB%9C%E6%8B%A5%E6%8C%A4%E7%9A%84%E7%8A%B6%E5%86%B5%EF%BC%8C%E6%8F%90%E9%AB%98%E7%94%A8%E6%88%B7%E7%9A%84%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%EF%BC%89\">使用<code class=\"language-text\">CDN</code>内容分发网络（<code class=\"language-text\">Content Delivery Network</code>其目的在于让用户可就近取得所需内容，解决网络拥挤的状况，提高用户的访问速度）</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E5%8E%8B%E7%BC%A9code-classlanguage-textjavascriptcode%E5%92%8Ccode-classlanguage-textcsscodegzip\">压缩<code class=\"language-text\">javascript</code>和<code class=\"language-text\">css</code>(gzip)</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#code-classlanguage-textcsscode%E6%94%BE%E5%9C%A8%E9%A1%B6%E9%83%A8code-classlanguage-textheadcode%E4%B8%ADcss-at-the-top\"><code class=\"language-text\">css</code>放在顶部<code class=\"language-text\">head</code>中(css at the top)</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#code-classlanguage-textscriptcode%E6%94%BE%E5%9C%A8%E9%A1%B5%E9%9D%A2%E5%BA%95%E9%83%A8script-at-the-bottom\"><code class=\"language-text\">script</code>放在页面底部(script at the bottom)</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E9%81%BF%E5%85%8D%E5%9C%A8code-classlanguage-textcsscode%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%8C%E5%BD%B1%E5%93%8D%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%80%A7%E8%83%BD\">避免在<code class=\"language-text\">css</code>中使用表达式，影响浏览器的性能</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E5%B0%86code-classlanguage-textjavascriptcode%E5%92%8Ccode-classlanguage-textcsscode%E6%94%BE%E5%9C%A8%E5%A4%96%E9%83%A8%E6%96%87%E4%BB%B6\">将<code class=\"language-text\">javascript</code>和<code class=\"language-text\">css</code>放在外部文件</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E5%87%8F%E5%B0%91-dns-%E6%9F%A5%E8%AF%A2%EF%BC%88dns-%E6%9F%A5%E6%89%BE%E5%8F%AF%E4%BB%A5%E7%BC%93%E5%AD%98%E8%B5%B7%E6%9D%A5%E4%BB%A5%E6%8F%90%E5%8D%87%E6%80%A7%E8%83%BD%EF%BC%89\">减少 DNS 查询（DNS 查找可以缓存起来以提升性能）</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E9%81%BF%E5%85%8D%E9%87%8D%E5%AE%9A%E5%90%91%EF%BC%88%E7%94%A8%E6%88%B7%E7%9A%84%E8%AF%B7%E6%B1%82%E8%A2%AB%E9%87%8D%E6%96%B0%E8%BD%AC%E5%90%91%E5%85%B6%E4%BB%96%E8%AF%B7%E6%B1%82%EF%BC%89\">避免重定向（用户的请求被重新转向其他请求）</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E7%A7%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E8%84%9A%E6%9C%AC\">移除重复脚本</a></li>\n<li><a href=\"/front-end-performance-optimization-tips/#%E9%85%8D%E7%BD%AE%E5%AE%9E%E4%BD%93%E6%A0%87%E7%AD%BE%EF%BC%88code-classlanguage-textenity-tagcodeweb-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E7%94%A8%E4%BA%8E%E7%A1%AE%E8%AE%A4%E7%BC%93%E5%AD%98%E7%BB%84%E4%BB%B6%E6%9C%89%E6%95%88%E7%9A%84%E4%B8%80%E7%A7%8D%E6%9C%BA%E5%88%B6\">配置实体标签（<code class=\"language-text\">Enity Tag</code>,Web 服务器和浏览器用于确认缓存组件有效的一种机制)</a></li>\n</ul>","frontmatter":{"path":"/front-end-performance-optimization-tips","date":"Apr 09, 2016","title":"前端性能优化","tldr":"时间黄金法则：只有 10%-20% 的时间花在下载 HTML 文档上,其余 80%-90% 都花在下载页面组件上，以下规则大部分都是摘自“雅虎军规”。","tags":["性能优化"]},"timeToRead":2}},"pageContext":{"next":{"frontmatter":{"title":"Ajax学习笔记","path":"/ajax"}},"previous":{"frontmatter":{"title":"一些我自己常用的优质Apps","path":"/my-favorite-apps"}},"relatedPosts":[{"next":{"frontmatter":{"title":"利用 TravisCI 自动部署 Hexo blog","path":"/automatic-deploy-hexo-blog-with-travis-ci"}},"previous":{"frontmatter":{"title":"Gulp and Browser-sync","path":"/use-browser-sync-with-gulp"}},"node":{"frontmatter":{"path":"/optimize-blog-performance","tags":["性能优化"],"title":"优化博客性能"}}}]}}}