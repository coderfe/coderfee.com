{"componentChunkName":"component---src-templates-blog-post-js","path":"/use-browser-sync-with-gulp","result":{"data":{"markdownRemark":{"html":"<h3>安装</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g browser-sync gulp</code></pre></div>\n<h3>启动服务</h3>\n<p>可以和 <code class=\"language-text\">gulp</code> 搭配使用，也可以单独使用，通常我都是搭配 <code class=\"language-text\">gulp</code> 使用的，但在这里仅作演示。通过以下命令可以启动一个小型的服务器，并监听文件变化。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># *号代表要监听的文件，可以使任何文件</span>\nbrowser-sync start --server --file <span class=\"token string\">\"*\"</span></code></pre></div>\n<p>此时，会在默认浏览器中打开一个窗口并自动访问 <a href=\"http://localhost:3000\">http://localhost:3000</a> ，同时呢，命令行会显示一下内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span>BS<span class=\"token punctuation\">]</span> Access URLs:\n --------------------------------------\n       Local: http://localhost:3000\n    External: http://192.168.1.103:3000\n --------------------------------------\n          UI: http://localhost:3001\n UI External: http://192.168.1.103:3001\n --------------------------------------\n<span class=\"token punctuation\">[</span>BS<span class=\"token punctuation\">]</span> Serving files from: ./</code></pre></div>\n<p><strong>用你的移动设备打开 <a href=\"http://192.168.1.103:3000\">http://192.168.1.103:3000</a> ，你会看见网页会呈现在你面前，而且设备间可以同步进行滚动等操作，调试响应式网站简直不要太好用😎</strong></p>\n<p><strong><a href=\"http://localhost:3001\">http://localhost:3001</a> 这个地址是一个可视化操作的界面，可以在这个网页中配置 <code class=\"language-text\">browser-sync</code> 的相关服务，很神奇，有木有？</strong></p>\n<h3>gulp &#x26; browser-sync</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp browser-sync --save-dev</code></pre></div>\n<p><strong>gulpfile.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tbrowserSync <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'browser-sync'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'server'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    browserSync<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        server<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            baseDir<span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>最后在命令行中运行 <code class=\"language-text\">gulp server</code></p>\n<h3>Others</h3>\n<p>其实利用 <code class=\"language-text\">gulp</code> 可以做的事情很多很多，编译 <code class=\"language-text\">SCSS</code> 、压缩代码/图片等等。前端自动化的任务交给它就可以了。</p>","tableOfContents":"<ul>\n<li><a href=\"/use-browser-sync-with-gulp/#%E5%AE%89%E8%A3%85\">安装</a></li>\n<li><a href=\"/use-browser-sync-with-gulp/#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1\">启动服务</a></li>\n<li><a href=\"/use-browser-sync-with-gulp/#gulp--browser-sync\">gulp &#x26; browser-sync</a></li>\n<li><a href=\"/use-browser-sync-with-gulp/#others\">Others</a></li>\n</ul>","frontmatter":{"path":"/use-browser-sync-with-gulp","date":"Jul 20, 2016","title":"Gulp and Browser-sync","tldr":"我今天发现利用 browser-sync 可以同时在 PC 和 移动端预览效果，我承认我发现的有点晚😅。。。","tags":["Gulp"]},"timeToRead":1}},"pageContext":{"next":{"frontmatter":{"title":"优化博客性能","path":"/optimize-blog-performance"}},"previous":{"frontmatter":{"title":"CSS 中有趣的 filter 属性","path":"/css-filter-property"}},"relatedPosts":[]}}}